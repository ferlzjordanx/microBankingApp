
services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "Paco@1357"
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "-pPaco@1357"]
      interval: 10s
      timeout: 5s
      retries: 10

  eureka:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    container_name: eureka
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_NAME: eureka-server
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"    # internal clients use kafka:9092
      - "29092:29092"  # optional: host tools use localhost:29092
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10




  account-service:
    build:
      context: .
      dockerfile: account-service/Dockerfile
    container_name: account-service
    depends_on:
      mysql:
        condition: service_healthy
      eureka:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SPRING_APPLICATION_NAME: account-service
      SERVER_PORT: "8081"
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/account_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8"
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: "Paco@1357"
      EUREKA_CLIENT_ENABLED: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://eureka:8761/eureka"
      EUREKA_INSTANCE_INSTANCE_ID: "account-service:8081"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"

  transaction-service:
    build:
      context: .
      dockerfile: transaction-service/Dockerfile
    container_name: transaction-service
    depends_on:
      mysql:
        condition: service_healthy
      eureka:
        condition: service_started
      account-service:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      SPRING_APPLICATION_NAME: transaction-service
      SERVER_PORT: "8083"
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/txn_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8"
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: "Paco@1357"
      EUREKA_CLIENT_ENABLED: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://eureka:8761/eureka"
      EUREKA_INSTANCE_INSTANCE_ID: "transaction-service:8083"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    depends_on:
      eureka:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      SPRING_APPLICATION_NAME: auth-service
      SERVER_PORT: "8082"
      # Remove the DB vars if auth-service doesn't use a DB yet.
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/auth_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8"
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: "Paco@1357"
      EUREKA_CLIENT_ENABLED: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://eureka:8761/eureka"
      EUREKA_INSTANCE_INSTANCE_ID: "auth-service:8082"

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    depends_on:
      eureka:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: api-gateway
      SERVER_PORT: "8080"
      EUREKA_CLIENT_ENABLED: "true"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://eureka:8761/eureka"
      EUREKA_INSTANCE_INSTANCE_ID: "api-gateway:8080"

volumes:
  mysql_data:
